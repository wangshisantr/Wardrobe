<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xihua.wardrobe.mapper.ClothesMapper" >
  <resultMap id="BaseResultMap" type="com.xihua.wardrobe.pojo.Clothes" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="color_id" property="colorId" jdbcType="INTEGER" />
    <result column="season" property="season" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="classification_id" property="classificationId" jdbcType="INTEGER" />
    <result column="tag_id" property="tagId" jdbcType="INTEGER" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="use_degree" property="useDegree" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, color_id, season, price, classification_id, tag_id, image, use_degree
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xihua.wardrobe.pojo.ClothesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from clothes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from clothes
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from clothes
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xihua.wardrobe.pojo.ClothesExample" >
    delete from clothes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xihua.wardrobe.pojo.Clothes" >
    insert into clothes (id, title, color_id, 
      season, price, classification_id, 
      tag_id, image, use_degree
      )
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{colorId,jdbcType=INTEGER}, 
      #{season,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, #{classificationId,jdbcType=INTEGER}, 
      #{tagId,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, #{useDegree,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xihua.wardrobe.pojo.Clothes" >
    insert into clothes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="colorId != null" >
        color_id,
      </if>
      <if test="season != null" >
        season,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="classificationId != null" >
        classification_id,
      </if>
      <if test="tagId != null" >
        tag_id,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="useDegree != null" >
        use_degree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="colorId != null" >
        #{colorId,jdbcType=INTEGER},
      </if>
      <if test="season != null" >
        #{season,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="classificationId != null" >
        #{classificationId,jdbcType=INTEGER},
      </if>
      <if test="tagId != null" >
        #{tagId,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="useDegree != null" >
        #{useDegree,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xihua.wardrobe.pojo.ClothesExample" resultType="java.lang.Integer" >
    select count(*) from clothes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update clothes
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.colorId != null" >
        color_id = #{record.colorId,jdbcType=INTEGER},
      </if>
      <if test="record.season != null" >
        season = #{record.season,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.classificationId != null" >
        classification_id = #{record.classificationId,jdbcType=INTEGER},
      </if>
      <if test="record.tagId != null" >
        tag_id = #{record.tagId,jdbcType=INTEGER},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.useDegree != null" >
        use_degree = #{record.useDegree,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update clothes
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      color_id = #{record.colorId,jdbcType=INTEGER},
      season = #{record.season,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      classification_id = #{record.classificationId,jdbcType=INTEGER},
      tag_id = #{record.tagId,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR},
      use_degree = #{record.useDegree,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xihua.wardrobe.pojo.Clothes" >
    update clothes
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="colorId != null" >
        color_id = #{colorId,jdbcType=INTEGER},
      </if>
      <if test="season != null" >
        season = #{season,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="classificationId != null" >
        classification_id = #{classificationId,jdbcType=INTEGER},
      </if>
      <if test="tagId != null" >
        tag_id = #{tagId,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="useDegree != null" >
        use_degree = #{useDegree,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xihua.wardrobe.pojo.Clothes" >
    update clothes
    set title = #{title,jdbcType=VARCHAR},
      color_id = #{colorId,jdbcType=INTEGER},
      season = #{season,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      classification_id = #{classificationId,jdbcType=INTEGER},
      tag_id = #{tagId,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      use_degree = #{useDegree,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>